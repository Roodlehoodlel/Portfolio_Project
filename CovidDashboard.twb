<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau_Table1)' inline='true' name='federated.0kfgqpp1x85oq811jyy4x1fz9udx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table1' name='excel-direct.04e8tp71xxehog1e80ruc1oogq2l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Rahul/Downloads/Tableau_Table1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.04e8tp71xxehog1e80ruc1oogq2l' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.04e8tp71xxehog1e80ruc1oogq2l' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A109B08883574EC088F7BEBFCB6F667A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A109B08883574EC088F7BEBFCB6F667A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A109B08883574EC088F7BEBFCB6F667A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A109B08883574EC088F7BEBFCB6F667A]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;New Zealand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A109B08883574EC088F7BEBFCB6F667A'>
            <properties context=''>
              <relation connection='excel-direct.04e8tp71xxehog1e80ruc1oogq2l' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table2)' inline='true' name='federated.0tjvhhz1w7622x1fdhtj90k904oy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table2' name='excel-direct.001sbdh12gnoys13kdpku1bp1nf9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Rahul/Downloads/Tableau_Table2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.001sbdh12gnoys13kdpku1bp1nf9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.001sbdh12gnoys13kdpku1bp1nf9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1CA4A1069F584DC8ABF1CA30710C508A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1CA4A1069F584DC8ABF1CA30710C508A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1CA4A1069F584DC8ABF1CA30710C508A]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c04f23'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;New Zealand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1CA4A1069F584DC8ABF1CA30710C508A'>
            <properties context=''>
              <relation connection='excel-direct.001sbdh12gnoys13kdpku1bp1nf9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table3)' inline='true' name='federated.1jqmffr0nw7lhu1feiby80a6azve' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table3' name='excel-direct.1r8j9eh1e3r5ne14v67di0464gls'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Rahul/Downloads/Tableau_Table3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1r8j9eh1e3r5ne14v67di0464gls' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D243:no:A1:D243:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1r8j9eh1e3r5ne14v67di0464gls' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D243:no:A1:D243:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D243:no:A1:D243:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F54CF9009D4C4510A4577E3D23CBB318]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F54CF9009D4C4510A4577E3D23CBB318]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F54CF9009D4C4510A4577E3D23CBB318]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F54CF9009D4C4510A4577E3D23CBB318]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F54CF9009D4C4510A4577E3D23CBB318]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;New Zealand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F54CF9009D4C4510A4577E3D23CBB318'>
            <properties context=''>
              <relation connection='excel-direct.1r8j9eh1e3r5ne14v67di0464gls' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D243:no:A1:D243:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table4)' inline='true' name='federated.0tow43n13ttmew1drw9940tkpk7j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table4' name='excel-direct.0jzwrvn067uwso16g2hkj09q0buh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Rahul/Downloads/Tableau_Table4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0jzwrvn067uwso16g2hkj09q0buh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0jzwrvn067uwso16g2hkj09q0buh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0D16D1ACD64944DD9C0C779551F7E768]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0D16D1ACD64944DD9C0C779551F7E768]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0D16D1ACD64944DD9C0C779551F7E768]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0D16D1ACD64944DD9C0C779551F7E768]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0D16D1ACD64944DD9C0C779551F7E768]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0D16D1ACD64944DD9C0C779551F7E768]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;New Zealand&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0D16D1ACD64944DD9C0C779551F7E768'>
            <properties context=''>
              <relation connection='excel-direct.0jzwrvn067uwso16g2hkj09q0buh' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Covid-19 Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table1)' name='federated.0kfgqpp1x85oq811jyy4x1fz9udx' />
          </datasources>
          <datasource-dependencies datasource='federated.0kfgqpp1x85oq811jyy4x1fz9udx'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='3' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[:Measure Names]' value='203' />
            <format attr='height' value='40' />
            <format attr='text-format' field='[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#dfe7e8' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='3' />
            <format attr='stroke-color' scope='cols' value='#1b1b1b' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='3' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#1b1b1b' />
            <format attr='stroke-size' scope='cols' value='3' />
            <format attr='stroke-size' scope='rows' value='3' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9230387210845947' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A526CB0F-FF54-49A4-9766-CA93C49767D5}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths by Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table2)' name='federated.0tjvhhz1w7622x1fdhtj90k904oy' />
          </datasources>
          <datasource-dependencies datasource='federated.0tjvhhz1w7622x1fdhtj90k904oy'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0tjvhhz1w7622x1fdhtj90k904oy].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tjvhhz1w7622x1fdhtj90k904oy].[none:location:nk]' value='155' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tjvhhz1w7622x1fdhtj90k904oy].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tjvhhz1w7622x1fdhtj90k904oy].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0tjvhhz1w7622x1fdhtj90k904oy].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{4D1E0FC2-519F-4047-96D7-B56D0CDC8FFC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table3)' name='federated.1jqmffr0nw7lhu1feiby80a6azve' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jqmffr0nw7lhu1feiby80a6azve'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jqmffr0nw7lhu1feiby80a6azve].[Longitude (generated)]' field-type='quantitative' max='20970233.087979712' min='-16028339.151780121' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jqmffr0nw7lhu1feiby80a6azve].[Latitude (generated)]' field-type='quantitative' max='9740285.6936042756' min='-6872466.9210183425' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jqmffr0nw7lhu1feiby80a6azve].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jqmffr0nw7lhu1feiby80a6azve].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jqmffr0nw7lhu1feiby80a6azve].[none:Location:nk]' />
              <color column='[federated.1jqmffr0nw7lhu1feiby80a6azve].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1jqmffr0nw7lhu1feiby80a6azve].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jqmffr0nw7lhu1feiby80a6azve].[Latitude (generated)]</rows>
        <cols>[federated.1jqmffr0nw7lhu1feiby80a6azve].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{21B1A21C-B953-407A-925A-5043932C7B54}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected &amp; Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table4)' name='federated.0tow43n13ttmew1drw9940tkpk7j' />
          </datasources>
          <datasource-dependencies datasource='federated.0tow43n13ttmew1drw9940tkpk7j'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-prediction-interval-lower' name='[fPIL:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-prediction-interval-upper' name='[fPIU:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Oceania&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tow43n13ttmew1drw9940tkpk7j].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]' />
              <text column='[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]' />
              <color column='[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Forecast Indicator:nk]' />
              <text column='[federated.0tow43n13ttmew1drw9940tkpk7j].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tow43n13ttmew1drw9940tkpk7j].[fVal:sum:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0tow43n13ttmew1drw9940tkpk7j].[tmn:date:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[fVal:sum:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]</field>
                  <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[tmn:date:qk]</field>
                  <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[fPIL:sum:PercentPopulationInfected:qk]</field>
                  <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[fPIU:sum:PercentPopulationInfected:qk]</field>
                  <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[fVal:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[fVal:sum:PercentPopulationInfected:qk]</field>
                  <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;European Union&quot;</value>
                <value>#2022-03-01 00:00:00#</value>
                <value>%null%</value>
                <value>%null%</value>
                <value>26.214988698351871</value>
                <value>812.66464964890804</value>
                <value>&quot;Actual&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{E5DC29D0-2AF1-4FDF-A209-1480F7115B85}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='8' param='horz' type-v2='layout-flow' w='98998' x='501' y='993'>
            <zone h='98014' id='6' type-v2='layout-basic' w='88979' x='501' y='993'>
              <zone h='16377' id='3' name='Sheet 1' w='47276' x='501' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28412' id='5' name='Sheet 2' w='47276' x='501' y='17370'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44789' id='10' name='Sheet 3' w='41703' x='47777' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53225' id='12' name='Sheet 4' w='79649' x='501' y='45782'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53225' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]&#10;[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Forecast Indicator:nk]' type-v2='color' w='9330' x='80150' y='45782'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98014' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='10019' x='89480' y='993'>
              <zone fixed-size='86' h='11663' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.1jqmffr0nw7lhu1feiby80a6azve].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10019' x='89480' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='16' param='vert' type-v2='layout-flow' w='98998' x='501' y='993'>
                <zone fixed-size='123' h='16377' id='3' is-fixed='true' name='Sheet 1' w='47276' x='501' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44789' id='10' is-fixed='true' name='Sheet 3' w='41703' x='47777' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='86' h='11663' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1jqmffr0nw7lhu1feiby80a6azve].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10019' x='89480' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='219' h='28412' id='5' is-fixed='true' name='Sheet 2' w='47276' x='501' y='17370'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53225' id='12' is-fixed='true' name='Sheet 4' w='79649' x='501' y='45782'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='53225' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]&#10;[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Forecast Indicator:nk]' type-v2='color' w='9330' x='80150' y='45782'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1C86E623-2AF1-4F5B-A364-09DE0595E9A3}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kfgqpp1x85oq811jyy4x1fz9udx].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6383D31C-F8EA-432B-9D83-8BCD0A82EE84}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tjvhhz1w7622x1fdhtj90k904oy].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tjvhhz1w7622x1fdhtj90k904oy].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{921AA98C-CBDE-44DB-A025-8CAD3A8182ED}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jqmffr0nw7lhu1feiby80a6azve].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jqmffr0nw7lhu1feiby80a6azve].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A7E18BA4-6E54-49A4-B9DC-6F4D7CF42836}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]&#10;[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Forecast Indicator:nk]</field>
            <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]</field>
            <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5B60C1B-5FAB-4277-B96F-0FF40880C75B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0tow43n13ttmew1drw9940tkpk7j].[fVal:sum:PercentPopulationInfected:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Forecast Indicator:nk]</field>
              <field>[federated.0tow43n13ttmew1drw9940tkpk7j].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{B81CC3DE-39EC-44CB-8BA4-0A4B98992D2F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      dv7/PTYhCOlWwYAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='64' name='Sheet 1' width='192'>
      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
      AdGaYalqyaZNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      NepG9W0RQ10AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
